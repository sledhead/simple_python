
#simple encryption
#symmetric encryption

from cryptography.fernet import Fernet

# Generate a Fernet key
key = Fernet.generate_key()
# Create a Fernet object with that key
f = Fernet(key)
# Input string to be encrypted
input_string = "Hello World!"

# Encrypt the string
encrypted_string = f.encrypt(input_string.encode())
# Decrypt the encrypted string
decrypted_string = f.decrypt(encrypted_string)
# Print the original and decrypted strings

print("Encrypt string:", encrypted_string)
print("Original String:", input_string)
print("Decrypted String:", decrypted_string.decode())

#Asymmetric encryption
import rsa

# generate public and private keys with 
# rsa.newkeys method,this method accepts 
# key length as its parameter
# key length should be atleast 16
#publicKey, privateKey = rsa.newkeys(512)
publicKey, privateKey = rsa.newkeys(2048)

# this is the string that we will be encrypting
message = "having fun in montana"

# rsa.encrypt method is used to encrypt 
# string with public key string should be 
# encode to byte string before encryption 
# with encode method
print("type: ",(publicKey))
encMessage = rsa.encrypt(message.encode(), 
						publicKey)

print("original string: ", message)
print("encrypted string: ", encMessage)

# the encrypted message can be decrypted 
# with ras.decrypt method and private key
# decrypt method returns encoded byte string,
# use decode method to convert it to string
# public key cannot be used for decryption
encoded_str = rsa.decrypt(encMessage,privateKey)
decMessage = encoded_str.decode()

print("encoded_str: ",encoded_str)
print("decrypted string: ", decMessage)
